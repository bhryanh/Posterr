services:
  postgres:
    image: postgres:15-alpine
    container_name: posterr-db
    environment:
      POSTGRES_DB: posterr
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: src/Posterr.API/Dockerfile
    container_name: posterr-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=posterr;Username=postgres;Password=postgres
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "5001:8080"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: posterr-frontend
    environment:
      - VITE_API_URL=http://localhost:5001
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
